spring.application.name=wochu-zuul-Service
server.port=5003

eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.client.service-url.defaultZone=http://eureka:eureka@wochu-eurekaServer7001:7001/eureka/

#为什么最后面是两个*，一个可不可以呢？当然可以，不过意义可就不一样了，Zuul中的路由匹配规则使用了Ant风格定义，一共有三种不同的通配符
# ? 匹配任意单个字符，如匹配/feign-consumer/a
# * 匹配任意数量的字符，如匹配/feign-consumer/ccc，但是无法匹配/feign-consumer/a/b/c
# ** 匹配任意数量的字符，如匹配/feign-consumer/ccc，也可以匹配/feign-consumer/a/b/c

# routes to serviceId 这里边是通过serviceid来绑定地址，当在路径后添加/api-a/   则是访问service-A对应的服务。
#通过一组zuul.routes.<route>.path与zuul.routes.<route>.serviceId参数对的方式配置即可
#zuul.routes.orders.path=/orders/**
#指定服务名称
#zuul.routes.orders.serviceId=wochu-order-Server
#代理前缀默认会从请求路径中移除(通过 zuul.stripPrefix=false 可以关闭这个功能)
#zuul.routes.orders.stripPrefix=false

#服务配置还可以使用另外一种比较简便的配置 zuul.routes.<serviceId>=<path>
zuul.routes.wochu-order-Server=/orders/**
zuul.routes.wochu-order-Server.stripPrefix=false

zuul.routes.coupon.path=/coupon/**
zuul.routes.coupon.serviceId=wochu-coupon-Service
zuul.routes.coupon.stripPrefix=false

zuul.routes.pay.path=/pay/**
zuul.routes.pay.serviceId=wochu-pay-Server
zuul.routes.pay.stripPrefix=false

# routes to url  这里是绑定具体的ip地址
#zuul.routes.orders.path=/orders/**
#zuul.routes.orders.url=http://localhost:9001/

#默认情况下，Eureka上所有注册的服务都会被Zuul创建映射关系来进行路由，对于不需要暴露的服务可以进行屏蔽
#zuul.ignored-services=wochu-coupon-Service,wochu-order-Server
#也可以单独对接口屏蔽映射
zuul.ignored-patterns=/**/couponCount/**

#给路由规则增加统一前缀
zuul.prefix=/wochu-api

#zipkin服务端地址
spring.zipkin.base-url=http://localhost:6677
spring.sleuth.sampler.percentage=1.0

#应用信息
info.app.name=study-microcloud-zuul
info.company.name=www.wochu.cn
info.build.artifactId=zuul-Server
info.build.author=excellent95
info.build.date=2018-11-23
info.build.version=1.0
